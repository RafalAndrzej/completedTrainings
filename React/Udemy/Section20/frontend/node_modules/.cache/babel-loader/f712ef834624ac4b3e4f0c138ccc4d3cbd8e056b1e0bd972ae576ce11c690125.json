{"ast":null,"code":"var _jsxFileName = \"/Users/rafal/NaukaProgramowania/React/19SectionRouterV6/react-router-UpdateVersion/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { json, redirect, useRouteLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }, this), \";\", /*#__PURE__*/_jsxDEV(EventsList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(eventId) {\n  const response = await fetch('http://localhost:8080/events/' + eventId);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not found details for selected events.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events ' };\n    // throw new Response(JSON.stringify({ message: 'Could nod fetch events' }), { status: 500 });\n    return json({\n      message: 'Could nod fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const eventId = params.eventID;\n}\nexport async function action(_ref2) {\n  let {\n    params,\n    request\n  } = _ref2;\n  const eventId = params.eventID;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Cound not delete event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","redirect","useRouteLoaderData","EventItem","EventsList","EventDetailPage","data","event","loadEvent","eventId","response","fetch","ok","message","status","resData","loadEvents","events","loader","request","params","eventID","action","method"],"sources":["/Users/rafal/NaukaProgramowania/React/19SectionRouterV6/react-router-UpdateVersion/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { json, redirect, useRouteLoaderData } from 'react-router-dom';\n\nimport EventItem from '../components/EventItem';\nimport EventsList from '../components/EventsList';\n\nconst EventDetailPage = () => {\n   const data = useRouteLoaderData('event-detail');\n\n   return (\n      <>\n         <EventItem event={data.event} />;\n         <EventsList />\n      </>\n   );\n};\n\nexport default EventDetailPage;\n\nasync function loadEvent(eventId) {\n   const response = await fetch('http://localhost:8080/events/' + eventId);\n\n   if (!response.ok) {\n      throw json({ message: 'Could not found details for selected events.' }, { status: 500 });\n   } else {\n      const resData = await response.json();\n      return resData.event;\n   }\n}\n\nasync function loadEvents() {\n   const response = await fetch('http://localhost:8080/events');\n\n   if (!response.ok) {\n      // return { isError: true, message: 'Could not fetch events ' };\n      // throw new Response(JSON.stringify({ message: 'Could nod fetch events' }), { status: 500 });\n      return json({ message: 'Could nod fetch events' }, { status: 500 });\n   } else {\n      const resData = await response.json();\n      return resData.events;\n   }\n}\n\nexport async function loader({ request, params }) {\n   const eventId = params.eventID;\n}\n\nexport async function action({ params, request }) {\n   const eventId = params.eventID;\n   const response = await fetch('http://localhost:8080/events/' + eventId, { method: request.method });\n\n   if (!response.ok) {\n      throw json({ message: 'Cound not delete event.' }, { status: 500 });\n   }\n\n   return redirect('/events');\n}\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,QAAQ,EAAEC,kBAAkB,QAAQ,kBAAkB;AAErE,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AAAC;AAAA;AAElD,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC3B,MAAMC,IAAI,GAAGJ,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBACG;IAAA,wBACG,QAAC,SAAS;MAAC,KAAK,EAAEI,IAAI,CAACC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,KAChC,uBAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACd;AAET,CAAC;AAAC,GATIF,eAAe;EAAA,QACLH,kBAAkB;AAAA;AAAA,KAD5BG,eAAe;AAWrB,eAAeA,eAAe;AAE9B,eAAeG,SAAS,CAACC,OAAO,EAAE;EAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,OAAO,CAAC;EAEvE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IACf,MAAMZ,IAAI,CAAC;MAAEa,OAAO,EAAE;IAA+C,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC3F,CAAC,MAAM;IACJ,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACV,IAAI,EAAE;IACrC,OAAOe,OAAO,CAACR,KAAK;EACvB;AACH;AAEA,eAAeS,UAAU,GAAG;EACzB,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACf;IACA;IACA,OAAOZ,IAAI,CAAC;MAAEa,OAAO,EAAE;IAAyB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACtE,CAAC,MAAM;IACJ,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACV,IAAI,EAAE;IACrC,OAAOe,OAAO,CAACE,MAAM;EACxB;AACH;AAEA,OAAO,eAAeC,MAAM,OAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC;EAC7C,MAAMX,OAAO,GAAGW,MAAM,CAACC,OAAO;AACjC;AAEA,OAAO,eAAeC,MAAM,QAAsB;EAAA,IAArB;IAAEF,MAAM;IAAED;EAAQ,CAAC;EAC7C,MAAMV,OAAO,GAAGW,MAAM,CAACC,OAAO;EAC9B,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,OAAO,EAAE;IAAEc,MAAM,EAAEJ,OAAO,CAACI;EAAO,CAAC,CAAC;EAEnG,IAAI,CAACb,QAAQ,CAACE,EAAE,EAAE;IACf,MAAMZ,IAAI,CAAC;MAAEa,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACtE;EAEA,OAAOb,QAAQ,CAAC,SAAS,CAAC;AAC7B;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}