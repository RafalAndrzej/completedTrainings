{"ast":null,"code":"var _jsxFileName = \"/Users/rafal/NaukaProgramowania/React/19SectionRouterV6/react-router-UpdateVersion/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider, Outlet } from 'react-router-dom';\nimport HomePage from './pages';\nimport EventsPage from './pages/EventsPage';\nimport EventDetailPage from './pages/EventDetailPage';\nimport NewEventPage from './pages/NewEventPage';\nimport EditEventPage from './pages/EditEventPage';\nimport MainNavigation from './components/MainNavigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true),\n  children: [{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 32\n    }, this)\n  }, {\n    path: '/events',\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 38\n    }, this)\n  }, {\n    path: '/events/new',\n    element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 42\n    }, this)\n  }, {\n    path: '/events/:eventID',\n    element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 47\n    }, this)\n  }, {\n    path: '/events/:eventID/edit',\n    element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 52\n    }, this)\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 11\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","Outlet","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","MainNavigation","router","path","element","children","App"],"sources":["/Users/rafal/NaukaProgramowania/React/19SectionRouterV6/react-router-UpdateVersion/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider, Outlet } from 'react-router-dom';\nimport HomePage from './pages';\nimport EventsPage from './pages/EventsPage';\nimport EventDetailPage from './pages/EventDetailPage';\nimport NewEventPage from './pages/NewEventPage';\nimport EditEventPage from './pages/EditEventPage';\nimport MainNavigation from './components/MainNavigation';\n\nconst router = createBrowserRouter([\n   {\n      path: '/',\n      element: (\n         <>\n            <MainNavigation />\n            <main>\n               <Outlet />\n            </main>\n         </>\n      ),\n      children: [\n         { path: '/', element: <HomePage /> },\n         { path: '/events', element: <EventsPage /> },\n         { path: '/events/new', element: <NewEventPage /> },\n         { path: '/events/:eventID', element: <EventDetailPage /> },\n         { path: '/events/:eventID/edit', element: <EditEventPage /> },\n      ],\n   },\n]);\n\nfunction App() {\n   return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,cAAc,EAAEC,MAAM,QAAQ,kBAAkB;AAC9E,OAAOC,QAAQ,MAAM,SAAS;AAC9B,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,6BAA6B;AAAC;AAAA;AAEzD,MAAMC,MAAM,GAAGT,mBAAmB,CAAC,CAChC;EACGU,IAAI,EAAE,GAAG;EACTC,OAAO,eACJ;IAAA,wBACG,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eAClB;MAAA,uBACG,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACN;EAAA,gBAEZ;EACDC,QAAQ,EAAE,CACP;IAAEF,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAE,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EACpC;IAAED,IAAI,EAAE,SAAS;IAAEC,OAAO,eAAE,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EAC5C;IAAED,IAAI,EAAE,aAAa;IAAEC,OAAO,eAAE,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EAClD;IAAED,IAAI,EAAE,kBAAkB;IAAEC,OAAO,eAAE,QAAC,eAAe;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EAC1D;IAAED,IAAI,EAAE,uBAAuB;IAAEC,OAAO,eAAE,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC;AAEnE,CAAC,CACH,CAAC;AAEF,SAASE,GAAG,GAAG;EACZ,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEJ;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAC5C;AAAC,KAFQI,GAAG;AAIZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}